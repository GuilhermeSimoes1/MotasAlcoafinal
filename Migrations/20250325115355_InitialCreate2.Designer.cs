// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotasAlcoafinal.Models;

#nullable disable

namespace MotasAlcoafinal.Migrations
{
    [DbContext(typeof(MotasAlcoaContext))]
    [Migration("20250325115355_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("motasAlcoafinal.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.EncomendaPecas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EncomendaId")
                        .HasColumnType("int");

                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncomendaId");

                    b.HasIndex("PecaId");

                    b.ToTable("EncomendaPecas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Encomendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Encomendas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Motocicletas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Motocicletas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Pecas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.ServicoPecas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeUsada")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PecaId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ServicoPecas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Servicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CustoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotocicletaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotocicletaId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.EncomendaPecas", b =>
                {
                    b.HasOne("motasAlcoafinal.Models.Encomendas", "Encomenda")
                        .WithMany("EncomendaPecas")
                        .HasForeignKey("EncomendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("motasAlcoafinal.Models.Pecas", "Peca")
                        .WithMany("EncomendaPecas")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encomenda");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Motocicletas", b =>
                {
                    b.HasOne("motasAlcoafinal.Models.Clientes", "Cliente")
                        .WithMany("Motocicletas")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.ServicoPecas", b =>
                {
                    b.HasOne("motasAlcoafinal.Models.Pecas", "Peca")
                        .WithMany("ServicoPecas")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("motasAlcoafinal.Models.Servicos", "Servico")
                        .WithMany("ServicoPecas")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peca");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Servicos", b =>
                {
                    b.HasOne("motasAlcoafinal.Models.Motocicletas", "Motocicleta")
                        .WithMany("Servicos")
                        .HasForeignKey("MotocicletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motocicleta");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Clientes", b =>
                {
                    b.Navigation("Motocicletas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Encomendas", b =>
                {
                    b.Navigation("EncomendaPecas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Motocicletas", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Pecas", b =>
                {
                    b.Navigation("EncomendaPecas");

                    b.Navigation("ServicoPecas");
                });

            modelBuilder.Entity("motasAlcoafinal.Models.Servicos", b =>
                {
                    b.Navigation("ServicoPecas");
                });
#pragma warning restore 612, 618
        }
    }
}
