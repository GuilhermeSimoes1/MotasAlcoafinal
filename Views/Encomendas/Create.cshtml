@model motasAlcoafinal.Models.Encomendas
@{
    ViewData["Title"] = "Criar Encomenda";
}

<div class="container mt-4">
    <div class="card shadow border-0">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Criar Encomenda</h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post">
                <div class="mb-3">
                    <label asp-for="DataPedido" class="form-label">Data do Pedido</label>
                    <input asp-for="DataPedido" class="form-control" type="date" />
                    <span asp-validation-for="DataPedido" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Peças e Quantidades</label>
                    <div id="pecasContainer">
                        <div class="row mb-2 align-items-end peca-row">
                            <div class="col-6">
                                <select name="pecasIds" class="form-select peca-select">
                                    <option value="">Selecione uma peça...</option>
                                    @foreach (var peca in ViewBag.Pecas as SelectList)
                                    {
                                        <option value="@peca.Value">@peca.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-3">
                                <input type="number" name="quantidades" class="form-control quantidade-input" min="1" value="1" />
                            </div>
                            <div class="col-2">
                                <button type="button" class="btn btn-danger btn-remove-peca">-</button>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-secondary mt-2" id="addPecaBtn">Adicionar Peça</button>
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">Criar</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const container = document.getElementById('pecasContainer');
        const addBtn = document.getElementById('addPecaBtn');

        // Função para adicionar nova linha de peça
        addBtn.addEventListener('click', function () {
            const novaLinha = document.querySelector('.peca-row').cloneNode(true);

            // Limpar valores da nova linha
            novaLinha.querySelector('.peca-select').value = '';
            novaLinha.querySelector('.quantidade-input').value = 1;

            container.appendChild(novaLinha);
            updateRemoveButtons();
        });

        // Função para remover linha
        container.addEventListener('click', function (e) {
            if (e.target.classList.contains('btn-remove-peca')) {
                const linhas = container.querySelectorAll('.peca-row');
                if (linhas.length > 1) {
                    e.target.closest('.peca-row').remove();
                    updateRemoveButtons();
                }
            }
        });

        // Atualizar visibilidade dos botões de remover
        function updateRemoveButtons() {
            const linhas = container.querySelectorAll('.peca-row');
            const removeButtons = container.querySelectorAll('.btn-remove-peca');

            removeButtons.forEach(btn => {
                btn.style.display = linhas.length > 1 ? 'block' : 'none';
            });
        }

        // Validação no submit
        document.querySelector('form').addEventListener('submit', function (e) {
            const pecasSelects = document.querySelectorAll('.peca-select');
            const quantidadeInputs = document.querySelectorAll('.quantidade-input');

            let pecasSelecionadas = 0;
            let quantidadesValidas = 0;

            pecasSelects.forEach(select => {
                if (select.value !== '') {
                    pecasSelecionadas++;
                }
            });

            quantidadeInputs.forEach(input => {
                if (input.value.trim() !== '' && parseInt(input.value) > 0) {
                    quantidadesValidas++;
                }
            });

            if (pecasSelecionadas === 0) {
                alert('Selecione pelo menos uma peça.');
                e.preventDefault();
            } else if (pecasSelecionadas !== quantidadesValidas) {
                alert('Verifique se todas as peças têm quantidades válidas.');
                e.preventDefault();
            }
        });

        // Inicializar visibilidade dos botões
        updateRemoveButtons();
    });
</script>