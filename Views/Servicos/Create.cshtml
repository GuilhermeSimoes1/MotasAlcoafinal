@model motasAlcoafinal.Models.Servicos
@{
    ViewData["Title"] = "Criar Serviço";
}

<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h2 class="fw-bold"><i class="fas fa-tools"></i> Criar Serviço</h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post">
                <div class="mb-3">
                    <label class="form-label fw-bold">Cliente</label>
                    <select id="clienteSelect" name="ClienteId" class="form-select">
                        <option value="">Selecione um cliente...</option>
                        @foreach (var cliente in ViewBag.Clientes as SelectList)
                        {
                            <option value="@cliente.Value">@cliente.Text</option>
                        }
                    </select>
                    <span asp-validation-for="ClienteId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="MotocicletaId" class="form-label fw-bold">Motocicleta (Matrícula)</label>
                    <select asp-for="MotocicletaId" class="form-select" id="matriculaSelect">
                        <option value="">Selecione um cliente primeiro...</option>
                    </select>
                    <span asp-validation-for="MotocicletaId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Descricao" class="form-label fw-bold">Descrição</label>
                    <input asp-for="Descricao" class="form-control" placeholder="Digite a descrição..." />
                    <span asp-validation-for="Descricao" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Data" class="form-label fw-bold">Data</label>
                    <input asp-for="Data" type="date" class="form-control" />
                    <span asp-validation-for="Data" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="CustoTotal" class="form-label fw-bold">Custo do serviço (não inclui peças) </label>
                    <input asp-for="CustoTotal" class="form-control" placeholder="Digite o custo do serviço..." id="custoServicoInput" />
                    <span asp-validation-for="CustoTotal" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Peças e Quantidades</label>
                    <div id="alertaStockZero" class="alert alert-warning d-none" role="alert">
                        <i class="fas fa-exclamation-triangle"></i> Atenção: A peça selecionada está com o stock a zero!
                    </div>
                    <div id="pecasContainer">
                        <div class="row mb-2 align-items-end peca-row">
                            <div class="col-6">
                                <select name="pecasIds" class="form-select peca-select searchable-select">
                                    <option value="">Selecione uma peça...</option>
                                    @foreach (var peca in ViewBag.Pecas as SelectList)
                                    {
                                        <option value="@peca.Value" data-preco="@((ViewBag.PecasData as Dictionary<int, decimal>)[int.Parse(peca.Value)])">@peca.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-3">
                                <input type="number" name="quantidades" class="form-control quantidade-input" min="1" value="1" />
                            </div>
                            <div class="col-2">
                                <button type="button" class="btn btn-danger btn-remove-peca">-</button>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-secondary mt-2" id="addPecaBtn">Adicionar Peça</button>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Custo Total (serviço + peças)</label>
                    <input type="text" class="form-control" id="custoTotalComPeças" readonly />
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary shadow">Criar</button>
                    <a asp-action="Index" class="btn btn-secondary shadow"><i class="fas fa-arrow-left"></i> Voltar</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- FontAwesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css ">

<!-- Select2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/select2 @@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

@section Scripts {
<!-- Select2 JS -->
<script src="https://cdn.jsdelivr.net/npm/select2 @@4.1.0-rc.0/dist/js/select2.min.js"></script>

<script>
    // Dados de preço e stock das peças
    var pecasData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.PecasData));
    var pecasStock = {};
    @foreach (var peca in ViewBag.Pecas as SelectList)
    {
        <text>pecasStock[@peca.Value] = @(((Dictionary<int, motasAlcoafinal.Models.Pecas>)ViewBag.PecasObj)[int.Parse(peca.Value)].QuantidadeEstoque);</text>
    }

    function calcularCustoTotal() {
        let custoServico = parseFloat(document.getElementById('custoServicoInput').value) || 0;
        let totalPecas = 0;
        document.querySelectorAll('.peca-row').forEach(function(row) {
            let select = row.querySelector('.peca-select');
            let quantidade = parseInt(row.querySelector('.quantidade-input').value) || 0;
            let preco = 0;
            if (select.value && pecasData[select.value]) {
                preco = parseFloat(pecasData[select.value]);
            }
            totalPecas += preco * quantidade;
        });
        document.getElementById('custoTotalComPeças').value = (custoServico + totalPecas).toFixed(2);
    }

    function verificarStockZero() {
        let alerta = document.getElementById('alertaStockZero');
        let algumZero = false;
        document.querySelectorAll('.peca-row').forEach(function(row) {
            let select = row.querySelector('.peca-select');
            if (select.value && pecasStock[select.value] === 0) {
                algumZero = true;
            }
        });
        if (algumZero) {
            alerta.classList.remove('d-none');
        } else {
            alerta.classList.add('d-none');
        }
    }

    function inicializarSelect2(selectElement) {
        $(selectElement).select2({
            theme: 'bootstrap-5',
            width: '100%',
            placeholder: "Selecione uma peça...",
            allowClear: true
        });
    }

    document.getElementById('addPecaBtn').addEventListener('click', function () {
        var container = document.getElementById('pecasContainer');
        var row = container.querySelector('.peca-row');
        var newRow = row.cloneNode(true);

        // Limpar campos
        newRow.querySelector('.peca-select').selectedIndex = 0;
        newRow.querySelector('.quantidade-input').value = 1;

        // Remover eventos antigos e re-inicializar Select2
        newRow.querySelector('.peca-select').replaceWith(newRow.querySelector('.peca-select').cloneNode(true));

        container.appendChild(newRow);
        const novoSelect = newRow.querySelector('.peca-select');
        inicializarSelect2(novoSelect);

        calcularCustoTotal();
        verificarStockZero();
    });

    document.getElementById('pecasContainer').addEventListener('change', function(e) {
        if (e.target.classList.contains('peca-select')) {
            calcularCustoTotal();
            verificarStockZero();
        }
    });

    document.getElementById('pecasContainer').addEventListener('click', function(e) {
        if (e.target.classList.contains('btn-remove-peca')) {
            var row = e.target.closest('.peca-row');
            if (document.querySelectorAll('.peca-row').length > 1) {
                row.remove();
                calcularCustoTotal();
                verificarStockZero();
            }
        }
    });

    document.getElementById('custoServicoInput').addEventListener('input', calcularCustoTotal);

    // AJAX para buscar as motos do cliente
    document.getElementById('clienteSelect').addEventListener('change', function() {
        var clienteId = this.value;
        var matriculaSelect = document.getElementById('matriculaSelect');
        matriculaSelect.innerHTML = '<option value="">Carregando...</option>';
        if (clienteId) {
            fetch('/Servicos/GetMotocicletasByCliente/' + clienteId)
                .then(response => response.json())
                .then(data => {
                    matriculaSelect.innerHTML = '<option value="">Selecione uma motocicleta...</option>';
                    data.forEach(function(moto) {
                        matriculaSelect.innerHTML += `<option value="${moto.id}">${moto.matricula} - ${moto.modelo}</option>`;
                    });
                });
        } else {
            matriculaSelect.innerHTML = '<option value="">Selecione um cliente primeiro...</option>';
        }
    });

    // Inicializar Select2 nas peças já existentes
    document.querySelectorAll('.searchable-select').forEach(function(select) {
        inicializarSelect2(select);
    });

    // Rodar funções iniciais
    calcularCustoTotal();
    verificarStockZero();
</script>
}